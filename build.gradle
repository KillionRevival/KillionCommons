plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'maven-publish'
    id("io.papermc.paperweight.userdev") version "2.0.0-beta.14"
    id "io.freefair.lombok" version "8.10"
    id 'com.gradleup.shadow' version '8.3.0'
}

group = 'co.killionrevival'
version = '4.4.1'

repositories {
    mavenLocal()
    gradlePluginPortal()
    mavenCentral()
    // Essentials
    maven {
        name "essentialsx-releases"
        url "https://repo.essentialsx.net/releases/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven { url "https://maven.enginehub.org/repo/" }
}

dependencies {
    paperweight.paperDevBundle('1.21.4-R0.1-SNAPSHOT')

    compileOnly 'org.projectlombok:lombok:1.18.32'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.3.0'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.13'
    compileOnly "net.luckperms:api:5.4"

    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'com.zaxxer:HikariCP:5.1.0'

    implementation 'fr.mrmicky:fastboard:2.1.3'

    compileOnly ("com.github.MilkBowl:VaultAPI:1.7.1") {
        exclude group: 'org.bukkit', module: 'bukkit'
    }
    compileOnly ('net.essentialsx:EssentialsX:2.20.1') {
        exclude group: 'org.bstats', module: 'bstats-bukkit'
        exclude group: 'org.spigotmc', module: 'spigot-api'
    }
    compileOnly 'uk.antiperson.stackmob:StackMob:5.10.2-fuck'

    implementation "org.incendo:cloud-core:2.0.0"
    implementation "org.incendo:cloud-annotations:2.0.0"
    annotationProcessor "org.incendo:cloud-annotations:2.0.0"
    implementation "org.incendo:cloud-paper:2.0.0-beta.10"
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.withType(Zip) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
tasks.withType(Tar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

sourcesJar {
    from sourceSets.main.delombokTask
}

assemble {
    // dependsOn(tasks.shadowJar)
    dependsOn reobfJar
}

shadowJar {
    relocate 'fr.mrmicky.fastboard', 'co.killionrevival.fastboard'
    relocate 'org.incendo.cloud', 'co.killionrevival.cloud'
}

publishing {
    publications {
        gpr(MavenPublication) {
            artifactId 'killioncommons'

            artifacts {
                artifact reobfJar.outputJar
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/KillionRevival/KillionCommons"
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
