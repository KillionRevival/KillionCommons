plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'maven-publish'
    id("io.papermc.paperweight.userdev") version "1.7.1"
}

group = 'co.killionrevival'
version = '2.0.1-SNAPSHOT'

repositories {
    gradlePluginPortal()
    mavenCentral()
    // Essentials
    maven {
        name "essentialsx-releases"
        url "https://repo.essentialsx.net/releases/"
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    paperweight.paperDevBundle('1.18.2-R0.1-SNAPSHOT')

    compileOnly 'org.projectlombok:lombok:1.18.32'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'

    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    implementation 'com.google.code.gson:gson:2.11.0'

    shadow 'org.postgresql:postgresql:42.7.3'

    compileOnly ("com.github.MilkBowl:VaultAPI:1.7") {
        exclude group: 'org.bukkit', module: 'bukkit'
    }
    compileOnly ('net.essentialsx:EssentialsX:2.19.0') {
        exclude group: 'org.bstats', module: 'bstats-bukkit'
        exclude group: 'org.spigotmc', module: 'spigot-api'
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


assemble {
    dependsOn reobfJar
}

publishing {
    publications {
        gpr(MavenPublication) {
            artifactId 'killioncommons'

            artifacts {
                artifact reobfJar.outputJar
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/KillionRevival/KillionCommons"
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
